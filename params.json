{"tagline":"Pager for mysql command line interface","body":"My *(sql)*  Pager\r\n==================\r\n\r\n- `Usage, Mysql`_\r\n- `Usage, PostgreSQL`_\r\n- `Configuration`_\r\n- `TODO`_\r\n\r\nmypager is a tool meant to be used with the MySQL and PostgreSQL command line clients on unix platforms.\r\n\r\nIt's goal is to ease the reading of resultsets, doing 2 things:\r\n\r\n- coloring data (numbers, dates and NULLs)\r\n- using the less command in case the output don't fit in the terminal\r\n\r\nHere is a sample output:\r\n\r\n.. image:: http://chivil.com/mysqlpager/sample-colored.png\r\n\r\nIt currently requires perl 5.8, preferably with the `Term::ReadKey <http://search.cpan.org/dist/TermReadKey/ReadKey.pm>`_ module\r\n(should work without, using the ``stty`` command)\r\n\r\n\r\nUsage, MySQL\r\n_________________\r\n\r\nTo use it you'll just have to tell your mysql client to use it as a pager::\r\n\r\n  mysql> pager /path/to/mypager.pl\r\n\r\nor edit your ``~/.my.cnf`` file::\r\n\r\n  [mysql]\r\n      pager = /path/to/mypager.pl\r\n\r\nUsage, PostgreSQL\r\n____________________\r\n\r\nThe script was originaly designed to work with MySQL, but an option exists in PostgreSQL client that format output as mypager expects it.\r\n\r\nUnlike the mysql client, there is no specific option for the PostgreSQL pager, you'll have to use the ``PAGER`` environment variable, for example::\r\n\r\n    export PAGER=/path/to/mypager.pl\r\n    psql --stuff\r\n\r\nOr in your ``.bashrc`` / ``.zshrc``::\r\n\r\n    alias psql=\"PAGER=/path/to/mypager.pl psql\"\r\n\r\nThen, you'll have to edit your ``.psqlrc`` file to set 2 default options::\r\n\r\n    -- Headers and surrounding pipes for columns\r\n    \\pset border 2\r\n\r\n    -- mypager will decide when to switch to less, but will always add color\r\n    \\pset pager always\r\n\r\n    -- You may want null to be NULL, at your discretion\r\n    -- \\pset null NULL\r\n\r\n\r\nConfiguration\r\n_________________\r\n\r\n\r\nThe configuration file is located in ``~/.mypager.conf``.\r\n\r\nA default configuration is present at the end of the script itself, should you wish to modify it instead.\r\n\r\nYou can use ``mypager.pl --installconf`` to write the default configuration to ``~/.mypager.conf``.\r\n\r\n\r\nStyles\r\n-------\r\n\r\nCurrent available styles are ``style-int``, ``style-null``, ``style-date``, ``style-header``, ``style-row``\r\n\r\n*header* and *row* styles are used for the ``\\G`` option of the mysql client (vertically formated output)\r\n\r\nYou can use any recognized value of the `Term::ANSIColor <http://search.cpan.org/dist/Term-ANSIColor/ANSIColor.pm#Function_Interface>`_ module, and combine them as you please.\r\n\r\nSome valid examples: ``red``, ``bold blue``, or ``underline white on_black``\r\n\r\n\r\nOther options\r\n--------------\r\n\r\nlong-lines-to-less\r\n\t0/**1**, with this option set to 1, the pager will switch to less whenever it encounters a line longer than screen width (even if the screen has enough height available)\r\n\r\n\r\nless-options\r\n\t**-S**, these are the options sent to less (check out the *OPTIONS* section of the man page for a complete list). The default is to chop long lines, you can add your own choice here, like *-I* to make searches case insensitive.\r\n\r\n\r\nless-options-overrides-env\r\n\t**0**/1, the default behavior is to add *less-options* before your *$LESS* environment variable so that the options set by your environment take precedence over the script options. Set to *1* to reverse the behavior.\r\n\r\nuse-less\r\n    **auto**/always/never, will determine whenever or not to switch to less, should you wish to alway use it or just colorize the output\r\n\r\nfix-utf8\r\n    **0**/1, try to fix broken UTF-8 output of older (< 5.5 ?) MySQL clients. This option fixes unaligned columns when 2 bytes characters are present in a cell.\r\n\r\n\r\nTODO\r\n__________\r\n\r\nprobably lots\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Mypager"}